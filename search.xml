<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ECharts</title>
    <url>/2020/-06-/04-/ECharts/</url>
    <content><![CDATA[<h2 id="ECharts的基本介绍"><a href="#ECharts的基本介绍" class="headerlink" title="ECharts的基本介绍"></a>ECharts的基本介绍</h2><p>图表：<br>1.echarts                   优点：简单；弱<br><a href="http://echarts.baidu.com/" target="_blank" rel="noopener">http://echarts.baidu.com/</a></p>
<p>2.d3.js                     优点：强大；难<br><a href="https://d3js.org/" target="_blank" rel="noopener">https://d3js.org/</a></p>
<p>echarts   借助  canvas来开发的<br>d3     借助     svg来开发的</p>
<p>1.echarts：<br>写配置生成图形</p>
<p>2.d3.js<br>1.计算<br>2.生成图形</p>
<p>[300, 421, 517, 200]<br>=&gt;计算(generator)<br>[75°, 105.4°, 130°, 50°]<br>=&gt;计算(generator)<br>[[300,100], [480, 260], [315, 495], …]<br>=&gt;生成pie</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let charts&#x3D;echarts.init(容器元素)</span><br><span class="line">  let option&#x3D;&#123;</span><br><span class="line">    title:      标题</span><br><span class="line">    xAxis:      柱状图</span><br><span class="line">    yAxis:      柱状图</span><br><span class="line">    series:[    数据</span><br><span class="line">      &#123;</span><br><span class="line">        name: &#39;名字&#39;,</span><br><span class="line">        type: &#39;bar&#x2F;pie&#x2F;radar&#39;,&#x2F;&#x2F;类型</span><br><span class="line">        data: [数据]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  charts.setOption(option);</span><br></pre></td></tr></table></figure>

<h3 id="ECharts—柱状图"><a href="#ECharts—柱状图" class="headerlink" title="ECharts—柱状图"></a>ECharts—柱状图</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>, <span class="comment">// 主标题</span></span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span> <span class="comment">// 副标题</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        legend: &#123;</span><br><span class="line"><span class="actionscript">          data: [<span class="string">'男'</span>, <span class="string">'女'</span>],</span></span><br><span class="line">          right: 0,</span><br><span class="line"><span class="actionscript">          top: <span class="string">'50%'</span>,</span></span><br><span class="line"><span class="actionscript">          orient: <span class="string">'vertical'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        xAxis: [ <span class="comment">// x轴</span></span></span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">'category'</span>,</span></span><br><span class="line"><span class="actionscript">            data: [<span class="string">'1月'</span>, <span class="string">'2月'</span>, <span class="string">'3月'</span>, <span class="string">'4月'</span>, <span class="string">'5月'</span>, <span class="string">'6月'</span>, <span class="string">'7月'</span>, <span class="string">'8月'</span>, <span class="string">'9月'</span>, <span class="string">'10月'</span>, <span class="string">'11月'</span>, <span class="string">'12月'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        yAxis: [ <span class="comment">// y轴</span></span></span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">'value'</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        series: [ <span class="comment">// 数据</span></span></span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'男'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'bar'</span>, <span class="comment">// 类型</span></span></span><br><span class="line">            data: [1352, 23, 1354, 1354, 1355, 1356, 1364, 1454, 1334, 1254, 1350, 754]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'女'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'bar'</span>,</span></span><br><span class="line">            data: [1245, 12, 1254, 1254, 1255, 1256, 1464, 1354, 1234, 1154, 1250, 454]</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        animationEasing: <span class="string">'bounceOut'</span>, <span class="comment">// 动画</span></span></span><br><span class="line"><span class="actionscript">        animationDelayUpdate(index)&#123; <span class="comment">// 动画延迟时间</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> index*<span class="number">700</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox); <span class="comment">// 初始化元素</span></span></span><br><span class="line"><span class="actionscript">      charts.setOption(option); <span class="comment">// 将配置注入到echarts中</span></span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—饼图"><a href="#ECharts—饼图" class="headerlink" title="ECharts—饼图"></a>ECharts—饼图</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>,</span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'学历比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: <span class="string">'20%'</span>,</span></span><br><span class="line"><span class="actionscript">            center: [<span class="string">'30%'</span>, <span class="string">'50%'</span>],</span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'小学'</span>, value:<span class="number">350</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'中学'</span>, value:<span class="number">120</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'大学'</span>, value:<span class="number">1524</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'研究生'</span>, value:<span class="number">410</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'博士及以上'</span>, value:<span class="number">85</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'性别比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,<span class="comment">//类型</span></span></span><br><span class="line"><span class="actionscript">            radius: <span class="string">'60%'</span>,<span class="comment">//半径</span></span></span><br><span class="line"><span class="actionscript">            center: [<span class="string">'70%'</span>, <span class="string">'50%'</span>],<span class="comment">//中心点</span></span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'男'</span>, value:<span class="number">2752</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'女'</span>, value:<span class="number">1985</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'其他'</span>, value:<span class="number">3</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—饼图–环"><a href="#ECharts—饼图–环" class="headerlink" title="ECharts—饼图–环"></a>ECharts—饼图–环</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>,</span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'学历比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: [<span class="string">'70%'</span>, <span class="string">'80%'</span>],<span class="comment">//内半径，外半径</span></span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'小学'</span>, value:<span class="number">350</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'中学'</span>, value:<span class="number">120</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'大学'</span>, value:<span class="number">1524</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'研究生'</span>, value:<span class="number">410</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'博士及以上'</span>, value:<span class="number">85</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—饼图和环结合"><a href="#ECharts—饼图和环结合" class="headerlink" title="ECharts—饼图和环结合"></a>ECharts—饼图和环结合</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>,</span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'学历比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: [<span class="string">'70%'</span>, <span class="string">'80%'</span>],</span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'小学'</span>, value:<span class="number">350</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'中学'</span>, value:<span class="number">120</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'大学'</span>, value:<span class="number">1524</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'研究生'</span>, value:<span class="number">410</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'博士及以上'</span>, value:<span class="number">85</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'性别比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: <span class="string">'50%'</span>,</span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'男'</span>, value:<span class="number">2752</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'女'</span>, value:<span class="number">1985</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'其他'</span>, value:<span class="number">3</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—多个图形"><a href="#ECharts—多个图形" class="headerlink" title="ECharts—多个图形"></a>ECharts—多个图形</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>,</span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        xAxis: [<span class="comment">//x轴</span></span></span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">'category'</span>,</span></span><br><span class="line"><span class="actionscript">            data: [<span class="string">'1月'</span>, <span class="string">'2月'</span>, <span class="string">'3月'</span>, <span class="string">'4月'</span>, <span class="string">'5月'</span>, <span class="string">'6月'</span>, <span class="string">'7月'</span>, <span class="string">'8月'</span>, <span class="string">'9月'</span>, <span class="string">'10月'</span>, <span class="string">'11月'</span>, <span class="string">'12月'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        yAxis: [<span class="comment">//y轴</span></span></span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">'value'</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'男'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'bar'</span>,</span></span><br><span class="line">            data: [1352, 23, 1354, 1354, 1355, 1356, 1364, 1454, 1334, 1254, 1350, 754]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'女'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'bar'</span>,</span></span><br><span class="line">            data: [1245, 12, 1254, 1254, 1255, 1256, 1464, 1354, 1234, 1154, 1250, 454]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'性别比例'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: <span class="string">'50%'</span>,</span></span><br><span class="line">            data: [</span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'男'</span>, value:<span class="number">2752</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'女'</span>, value:<span class="number">1985</span>&#125;,</span></span><br><span class="line"><span class="actionscript">              &#123;name:<span class="string">'其他'</span>, value:<span class="number">3</span>&#125;,</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—多雷达图"><a href="#ECharts—多雷达图" class="headerlink" title="ECharts—多雷达图"></a>ECharts—多雷达图</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox=$(<span class="string">'.box'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'北京人口数量'</span>,</span></span><br><span class="line"><span class="actionscript">          subtext: <span class="string">'2017年(单位：万)'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        legend: &#123;</span><br><span class="line"><span class="actionscript">          data: [<span class="string">'角色'</span>, <span class="string">'敌人'</span>],</span></span><br><span class="line">          right: 0,</span><br><span class="line"><span class="actionscript">          top: <span class="string">'50%'</span>,</span></span><br><span class="line"><span class="actionscript">          orient: <span class="string">'vertical'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        radar: &#123;</span><br><span class="line">          indicator: [</span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'HP'</span>, max: <span class="number">9999</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'攻击'</span>, max: <span class="number">99</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'防御'</span>, max: <span class="number">99</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'魔法'</span>, max: <span class="number">99</span>&#125;,</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'属性'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'radar'</span>,</span></span><br><span class="line">            data: [</span><br><span class="line">              &#123;</span><br><span class="line"><span class="actionscript">                name: <span class="string">'角色'</span>,</span></span><br><span class="line">                value: [1570, 23, 65, 17]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="actionscript">                name: <span class="string">'敌人'</span>,</span></span><br><span class="line">                value: [2300, 89, 76, 65]</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ECharts—两饼联动"><a href="#ECharts—两饼联动" class="headerlink" title="ECharts—两饼联动"></a>ECharts—两饼联动</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;<span class="attribute">width</span>:<span class="number">800px</span>; <span class="attribute">height</span>:<span class="number">600px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid black; <span class="attribute">margin</span>:<span class="number">0</span> auto;<span class="attribute">overflow</span>:hidden;&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;<span class="attribute">width</span>:<span class="number">50%</span>;<span class="attribute">height</span>:<span class="number">100%</span>; <span class="attribute">float</span>:left;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $=<span class="built_in">document</span>.querySelectorAll.bind(<span class="built_in">document</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox1=$(<span class="string">'.box .box_1'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> oBox2=$(<span class="string">'.box .box_2'</span>)[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> datas=[</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          name: <span class="string">'山东'</span>,</span></span><br><span class="line">          value: 815,</span><br><span class="line">          citys: [</span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'临沂'</span>, value: <span class="number">182</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'泰安'</span>, value: <span class="number">457</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'德州'</span>, value: <span class="number">231</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'济南'</span>, value: <span class="number">27</span>&#125;,</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          name: <span class="string">'湖南'</span>,</span></span><br><span class="line">          value: 275,</span><br><span class="line">          citys: [</span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'长沙'</span>, value: <span class="number">342</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'津市'</span>, value: <span class="number">33</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'湘潭'</span>, value: <span class="number">234</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'株洲'</span>, value: <span class="number">45</span>&#125;,</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line"><span class="actionscript">          name: <span class="string">'东北'</span>,</span></span><br><span class="line">          value: 512,</span><br><span class="line">          citys: [</span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'黑龙江'</span>, value: <span class="number">43</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'鞍山'</span>, value: <span class="number">22</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'xxx'</span>, value: <span class="number">443</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;name: <span class="string">'xxx'</span>, value: <span class="number">545</span>&#125;,</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">      ];</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">      <span class="comment">//生成省的数据</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="actionscript">          text: <span class="string">'各省数据'</span>,</span></span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">'各省数据'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">            radius: <span class="string">'50%'</span>,</span></span><br><span class="line"><span class="javascript">            data: datas.map(<span class="function"><span class="params">json</span>=&gt;</span>(&#123;<span class="attr">name</span>: json.name, <span class="attr">value</span>: json.value&#125;))</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts=echarts.init(oBox1);</span></span><br><span class="line">      charts.setOption(option);</span><br><span class="line">    </span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> charts2=echarts.init(oBox2);</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">      charts.on(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(ev)</span></span>&#123;</span></span><br><span class="line">        setCity(ev.name)</span><br><span class="line">      &#125;);</span><br><span class="line">    </span><br><span class="line">      setCity(datas[0].name);</span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">setCity</span><span class="params">(name)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data=<span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">        datas.forEach(<span class="function"><span class="params">json</span>=&gt;</span>&#123;</span></span><br><span class="line">          if(json.name==name)&#123;</span><br><span class="line">            data=json;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> option=&#123;</span></span><br><span class="line">          title:&#123;</span><br><span class="line"><span class="javascript">            text: <span class="string">`<span class="subst">$&#123;name&#125;</span>省数据`</span>,</span></span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              type: <span class="string">'category'</span>,</span></span><br><span class="line"><span class="javascript">              data: data.citys.map(<span class="function"><span class="params">city</span>=&gt;</span>city.name)</span></span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          yAxis: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              type: <span class="string">'value'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          series: [</span><br><span class="line">            &#123;</span><br><span class="line"><span class="actionscript">              name: <span class="string">'city'</span>,</span></span><br><span class="line"><span class="actionscript">              type: <span class="string">'bar'</span>,</span></span><br><span class="line"><span class="actionscript">              radius: <span class="string">'50%'</span>,</span></span><br><span class="line"><span class="javascript">              data: data.citys.map(<span class="function"><span class="params">city</span>=&gt;</span>city.value)</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;;</span><br><span class="line">    </span><br><span class="line">        charts2.setOption(option);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box_1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box_2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>ECharts</tag>
      </tags>
  </entry>
  <entry>
    <title>JS修改CSS</title>
    <url>/2020/-06-/04-/JS%E4%BF%AE%E6%94%B9CSS/</url>
    <content><![CDATA[<h2 id="JS修改CSS"><a href="#JS修改CSS" class="headerlink" title="JS修改CSS"></a>JS修改CSS</h2><h3 id="修改style样式"><a href="#修改style样式" class="headerlink" title="修改style样式"></a>修改style样式</h3><p>通过document.styleSheets[n] // n表示期望修改的样式表序号，从0开始计数来获取到期望修改的样式表，通过cssRules[0]获取到该样式表的css内容，通过style修改特定样式。（此方法比较麻烦，需要清楚指定样式在样式表的顺序）</p>
<p>styleSheets：表示引入的所有CSS文件的数组<br>cssRules：表示CSS文件中所有定义的样式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> stylesheet = <span class="built_in">document</span>.styleSheets[<span class="number">0</span>]; <span class="comment">// 获取引入的第一个CSS文件</span></span><br><span class="line"><span class="comment">// 获取CSS文件中的第一个设置的CSS样式</span></span><br><span class="line">stylesheet.cssRules[<span class="number">0</span>].style.backgroundColor = <span class="string">"green"</span>;</span><br></pre></td></tr></table></figure>
<p>上面代码实现的本质：更改CSS样式表中的样式。需要定位到是第几个CSS文件和在这个文件中是第几个定义的<br>// 每个style标签都是一个CSS样式表的文件，引入的CSS也是样式表的文件</p>
<h3 id="修改特定元素节点的style内容"><a href="#修改特定元素节点的style内容" class="headerlink" title="修改特定元素节点的style内容"></a>修改特定元素节点的style内容</h3><h4 id="cssText"><a href="#cssText" class="headerlink" title="cssText"></a>cssText</h4><p>cssText可以一次性修改多个css属性<br>cssText会覆盖原来在行内style中定义的样式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementsByClassName(&quot;setAttribute&quot;)[0].style.cssText &#x3D; &quot;width: 300px; background-color: red; height: 200px;&quot;</span><br></pre></td></tr></table></figure>

<h4 id="style-attrName"><a href="#style-attrName" class="headerlink" title="style.attrName"></a>style.attrName</h4><p>style.attrName 修改单个属性 attrName的值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementsByClassName(&quot;setAttribute&quot;)[0].style.border &#x3D; &quot;1px solid black&quot;</span><br></pre></td></tr></table></figure>
<p>querySelectorAll()，这个方法中不能查找特殊的伪类元素，会导致所有查找的元素都失效。例如：.scroll-other_scroll .ivu-scroll-container::-webkit-scrollbar-thumb这个选择器就是无效的<br>querySelectorAll(“.ivu-btn-primary, .scroll-other_scroll .ivu-scroll-container::-webkit-scrollbar-thumb”).setAttribute(‘style’, ‘color:red’);<br>例如：<br>// Array.from(document.querySelectorAll(‘.scroll-other_scroll .ivu-scroll-container, .scroll-style’)).forEach(item=&gt;item.style.scrollbarArrowColor = this.$store.state.webInfo.style[‘primary-color’])</p>
<h4 id="通过setAttribute-修改style属性值"><a href="#通过setAttribute-修改style属性值" class="headerlink" title="通过setAttribute 修改style属性值"></a>通过setAttribute 修改style属性值</h4><p>setAttribute会覆盖原来在行内style中定义的样式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementsByClassName(&quot;setAttribute&quot;)[0].setAttribute(&#39;style&#39;, &#39;width: 400px; background-color: yellow; height: 300px;&#39;)</span><br></pre></td></tr></table></figure>


<h3 id="动态生成CSS文件引入"><a href="#动态生成CSS文件引入" class="headerlink" title="动态生成CSS文件引入"></a>动态生成CSS文件引入</h3><h4 id="动态为页面添加CSS样式文件引用："><a href="#动态为页面添加CSS样式文件引用：" class="headerlink" title="动态为页面添加CSS样式文件引用："></a>动态为页面添加CSS样式文件引用：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (document.createStyleSheet) &#123; &#x2F;&#x2F;IE</span><br><span class="line">    document.createStyleSheet(&quot;.&#x2F;Themes&#x2F;Default&#x2F;MessageTip.css&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else &#123; &#x2F;&#x2F;Firefox, Chrome</span><br><span class="line">    var stylesheet &#x3D; document.createElement(&quot;link&quot;);</span><br><span class="line">    stylesheet.href &#x3D; &quot;.&#x2F;Themes&#x2F;Default&#x2F;MessageTip.css&quot;;</span><br><span class="line">    stylesheet.rel &#x3D; &quot;stylesheet&quot;;</span><br><span class="line">    stylesheet.type &#x3D; &quot;text&#x2F;css&quot;;</span><br><span class="line">    document.getElementsByTagName(&quot;head&quot;)[0].appendChild(stylesheet);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="动态生成CSS文件引入-1"><a href="#动态生成CSS文件引入-1" class="headerlink" title="动态生成CSS文件引入"></a>动态生成CSS文件引入</h3><p>使用&lt;style&gt;标签插入页面样式,这种方式在各个主流浏览器存在兼容性问题，像firefox等标准浏览器无法直接获取设置styleSheet的cssText值，标准浏览器下只能使用document.styleSheets[0].cssRules[0].cssText单个获取样式；同时使用：document.styleSheets[0].cssRules[0].cssText=newcssText；页面不会自动更新样式，必须使用：document.styleSheets[0].cssRules[0].style.cssText=newcssText；这点似乎没坑爹的IE来的人性化和简便。YUI中使用了一个很好的办法：style.appendChild(document.createTextNode(styles));采用createTextNode将样式字符串添加到&lt;style&gt;标签内；</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">includeStyleElement</span>(<span class="params">styles</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里最好给ie设置下面的属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*if (isIE()) &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    style.type = "text/css";</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    style.media = "screen"</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (style.styleSheet) &#123; <span class="comment">//for ie</span></span><br><span class="line"></span><br><span class="line">        style.styleSheet.cssText = styles;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">//for w3c</span></span><br><span class="line"></span><br><span class="line">        style.appendChild(<span class="built_in">document</span>.createTextNode(styles));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>] || <span class="built_in">document</span>.body).appendChild(style);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> styles = <span class="string">"#div&#123; color:#FFFFFF &#125;"</span>;</span><br><span class="line"></span><br><span class="line">includeStyleElement(styles, <span class="string">"newstyle"</span>);</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>JS</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>vue框架页面颜色个性化配置的实现</title>
    <url>/2020/-06-/04-/vue%E6%A1%86%E6%9E%B6%E9%A1%B5%E9%9D%A2%E9%A2%9C%E8%89%B2%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="设置框架的色调根据后端返回的数据更改"><a href="#设置框架的色调根据后端返回的数据更改" class="headerlink" title="设置框架的色调根据后端返回的数据更改"></a>设置框架的色调根据后端返回的数据更改</h2><h3 id="使用CSS变量的方法"><a href="#使用CSS变量的方法" class="headerlink" title="使用CSS变量的方法"></a>使用CSS变量的方法</h3><h4 id="使用-–-声明变量，使用-var-函数获取变量。"><a href="#使用-–-声明变量，使用-var-函数获取变量。" class="headerlink" title="使用 – 声明变量，使用 var() 函数获取变量。"></a>使用 – 声明变量，使用 var() 函数获取变量。</h4><p>变量名大小写敏感<br>因为声明变量是和CSS的使用方法一样，CSS能在哪里定义声明变量就可以在哪里定义。分为三种：行内样式、内部样式表、外部样式表</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">// 初始化定义变量</span></span><br><span class="line">        <span class="comment">// :root是伪元素</span></span><br><span class="line">        :root &#123;</span><br><span class="line">            --primary-color: #cbac6c; /*主题色*/</span><br><span class="line">            --auxiliary-color: #0077DA; /*主题辅助色*/</span><br><span class="line">            --info-color: #2db7f5; /*情景色-一般信息*/</span><br><span class="line">            --success-color: #00a436; /*情景色-成功*/</span><br><span class="line">            --warn-color: #ffb400; /*情景色-警告*/</span><br><span class="line">            --error-color: #f60151; /*情景色-错误*/</span><br><span class="line">            --light-color: #f0e3cb; /*情景色-浅色*/</span><br><span class="line">            --gradient-color-start: #986815; /*渐变色-起点*/</span><br><span class="line">            --gradient-color-end: #caa561; /*渐变色-终点*/</span><br><span class="line">            --dialog-head-color: #f7b6b6; /*对话框头部背景色*/</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 使用CSS变量，var() 函数还可以使用第二个参数，表示变量的默认值。如果该变量不存在，就会使用这个默认值。</span></span><br><span class="line"><span class="regexp">color: var(--color, #fff);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ var()函数还可以用在变量的声明。</span></span><br><span class="line"><span class="regexp">:root &#123;</span></span><br><span class="line"><span class="regexp">  --primary-color: red;</span></span><br><span class="line"><span class="regexp">  --logo-text: var(--primary-color);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 注意，变量值只能用作属性值，不能用作属性名。</span></span><br><span class="line"><span class="regexp">.foo &#123;</span></span><br><span class="line"><span class="regexp">  --side: margin-top;</span></span><br><span class="line"><span class="regexp">  /</span>* 无效 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">  var(--side): 20px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">上面代码中，变量--side用作属性名，这是无效的。</span></span><br></pre></td></tr></table></figure>

<h4 id="CSS变量值的类型"><a href="#CSS变量值的类型" class="headerlink" title="CSS变量值的类型"></a>CSS变量值的类型</h4><p>如果变量值是一个字符串，可以与其他字符串拼接。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--bar: &#39;hello&#39;;</span><br><span class="line">--foo: var(--bar)&#39; world&#39;;</span><br></pre></td></tr></table></figure>

<p>利用这一点，可以 debug</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body:after &#123;</span><br><span class="line">  content: &#39;--screen-category : &#39;var(--screen-category);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果变量值是数值，不能与数值单位直接连用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.foo &#123;</span><br><span class="line">  --gap: 20;</span><br><span class="line">  &#x2F;* 无效 *&#x2F;</span><br><span class="line">  margin-top: var(--gap)px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面代码中，数值与单位直接写在一起，这是无效的。必须使用calc()函数，将它们连接。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.foo &#123;</span><br><span class="line">  --gap: 20;</span><br><span class="line">  margin-top: calc(var(--gap) * 1px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果变量值带有单位，就不能写成字符串。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 无效 *&#x2F;</span><br><span class="line">.foo &#123;</span><br><span class="line">  --foo: &#39;20px&#39;;</span><br><span class="line">  font-size: var(--foo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 有效 *&#x2F;</span><br><span class="line">.foo &#123;</span><br><span class="line">  --foo: 20px;</span><br><span class="line">  font-size: var(--foo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="CSS变量作用域"><a href="#CSS变量作用域" class="headerlink" title="CSS变量作用域"></a>CSS变量作用域</h4><p>同一个 CSS 变量，可以在多个选择器内声明.读取的时候，优先级最高的声明生效.<br>所在选择器优先级高的变量声明会覆盖优先级低的。–就近原则:。这与 CSS 的”层叠”（cascade）规则是一致的。</p>
<p>变量的作用域就是它所在的选择器的有效范围。<br>全局的变量通常放在根元素:root里面，确保任何选择器都可以读取它们。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    --color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">    --color: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;显示为黑色&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h4><p>CSS 是动态的，页面的任何变化，都会导致采用的规则变化。</p>
<p>利用这个特点，可以在响应式布局的media命令里面声明变量，使得不同的屏幕宽度有不同的变量值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  --primary: #7F583F;</span><br><span class="line">  --secondary: #F7EFD2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">  color: var(--primary);</span><br><span class="line">  text-decoration-color: var(--secondary);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media screen and (min-width: 768px) &#123;</span><br><span class="line">  body &#123;</span><br><span class="line">    --primary:  #F7EFD2;</span><br><span class="line">    --secondary: #7F583F;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="兼容性处理"><a href="#兼容性处理" class="headerlink" title="兼容性处理"></a>兼容性处理</h4><p>对于不支持 CSS 变量的浏览器，可以采用下面的写法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a &#123;</span><br><span class="line">  color: #7F583F;</span><br><span class="line">  color: var(--primary);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也可以使用@support命令进行检测。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@supports ( (--a: 0)) &#123;</span><br><span class="line">  &#x2F;* supported *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@supports ( not (--a: 0)) &#123;</span><br><span class="line">  &#x2F;* not supported *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="JavaScript-检测浏览器是否支持-CSS-变量"><a href="#JavaScript-检测浏览器是否支持-CSS-变量" class="headerlink" title="JavaScript 检测浏览器是否支持 CSS 变量"></a>JavaScript 检测浏览器是否支持 CSS 变量</h4><p>JavaScript 检测浏览器是否支持 CSS 变量：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const isSupported &#x3D;</span><br><span class="line">  window.CSS &amp;&amp;</span><br><span class="line">  window.CSS.supports &amp;&amp;</span><br><span class="line">  window.CSS.supports(&#39;--a&#39;, 0);</span><br><span class="line"></span><br><span class="line">if (isSupported) &#123;</span><br><span class="line">  &#x2F;* supported *&#x2F;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  &#x2F;* not supported *&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>








<h4 id="javascript-操作css变量"><a href="#javascript-操作css变量" class="headerlink" title="javascript 操作css变量"></a>javascript 操作css变量</h4><p><strong>读取变量的值</strong><br>变量是跟着标签走的，变量定义在哪个标签上则从哪个标签上获取那个变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const dom &#x3D; document.querySelector(&#39;selector&#39;);</span><br><span class="line">dom.style.getPropertyValue(&#39;--color&#39;).trim();;</span><br></pre></td></tr></table></figure>

<p><strong>修改CSS变量的值</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> dom = <span class="built_in">document</span>.querySelector(<span class="string">'selector'</span>);</span><br><span class="line">dom.style.setProperty(<span class="string">'--color'</span>, <span class="string">'white'</span>);</span><br></pre></td></tr></table></figure>

<p><strong>删除变量</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.body.style.removeProperty(&#39;--primary&#39;);</span><br></pre></td></tr></table></figure>

<p>JavaScript 可以将任意值存入样式表。下面是一个监听事件的例子，事件信息被存入 CSS 变量。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const docStyle &#x3D; document.documentElement.style;</span><br><span class="line"></span><br><span class="line">document.addEventListener(&#39;mousemove&#39;, (e) &#x3D;&gt; &#123;</span><br><span class="line">  docStyle.setProperty(&#39;--mouse-x&#39;, e.clientX);</span><br><span class="line">  docStyle.setProperty(&#39;--mouse-y&#39;, e.clientY);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>那些对 CSS 无用的信息，也可以放入 CSS 变量。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--foo: if(x &gt; 5) this.width &#x3D; 10;</span><br></pre></td></tr></table></figure>
<p>上面代码中，–foo的值在 CSS 里面是无效语句，但是可以被 JavaScript 读取。这意味着，可以把样式设置写在 CSS 变量中，让 JavaScript 读取。</p>
<p>所以，CSS 变量提供了 JavaScript 与 CSS 通信的一种途径。</p>
<h3 id="IE不兼容CSS变量的解决方案"><a href="#IE不兼容CSS变量的解决方案" class="headerlink" title="IE不兼容CSS变量的解决方案"></a>IE不兼容CSS变量的解决方案</h3><p>使用原生JS来更改CSS样式，或者动态生成CSS样式，引入到页面中</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>gulp</title>
    <url>/2020/-05-/28-/gulp/</url>
    <content><![CDATA[<h2 id="Gulp基础"><a href="#Gulp基础" class="headerlink" title="Gulp基础"></a>Gulp基础</h2><h3 id="Gulp运行环境"><a href="#Gulp运行环境" class="headerlink" title="Gulp运行环境"></a>Gulp运行环境</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// gulp的使用需要安装两个gulp，一个是本地的一个是全局的</span></span><br><span class="line"><span class="comment">// 第一步、安装gulp：</span></span><br><span class="line">&gt;全局的：npm i gulp -g        启动器（只负责启动）</span><br><span class="line">&gt;本地的：npm i gulp           核心库（只负责提供各种功能）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二步</span></span><br><span class="line"><span class="comment">// gulp也好，webpack也好，它的每一个功能基本都是由一个独立的组件完成的，所以需要包管理</span></span><br><span class="line">输入命令npm init -y</span><br><span class="line"><span class="comment">// 如果使用cnpm init -y，会出现很多乱的依赖项，cnpm的层级不对，需要删除配置中的依赖项</span></span><br><span class="line"><span class="comment">// 再输入本地安装命令：cnpm i gulp -D</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三步、编写配置：</span></span><br><span class="line">文件名：gulpfile.js</span><br><span class="line">gulpfile.js：</span><br></pre></td></tr></table></figure>

<h3 id="Gulp组件（模块）"><a href="#Gulp组件（模块）" class="headerlink" title="Gulp组件（模块）"></a>Gulp组件（模块）</h3><h4 id="压缩js的组件（模块）：gulp-uglify"><a href="#压缩js的组件（模块）：gulp-uglify" class="headerlink" title="压缩js的组件（模块）：gulp-uglify"></a>压缩js的组件（模块）：gulp-uglify</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">输入命令：cnpm i gulp-uglify -D</span><br><span class="line">gulp-uglify作用：帮助js文件压缩</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有经过压缩的文件都放在gulpProject/src中</span></span><br><span class="line">gulpProject/src/js/jquery.js</span><br><span class="line">gulpProject/src/js/vue.js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>); <span class="comment">// 引入gulp</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// 引入压缩文件的组件(插件)uglify</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明gulp的任务：gulp.task(),gulp的任务可以声明多个</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	gulp.task('任务名称', ()=&gt;&#123;</span></span><br><span class="line"><span class="comment">		return 任务的具体操作;</span></span><br><span class="line"><span class="comment">	&#125;)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	gulp支持流操作</span></span><br><span class="line"><span class="comment">	gulp.src作用：读取一些文件</span></span><br><span class="line"><span class="comment">	.pipe作用：下一步操作</span></span><br><span class="line"><span class="comment">	uglify作用：压缩</span></span><br><span class="line"><span class="comment">	gulp.dest作用：输出到哪里</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src([<span class="string">'./src/js/*.js'</span>])</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	default是一个特殊的任务</span></span><br><span class="line"><span class="comment">	当不指定执行哪个任务的时候，会自动执行default中的任务</span></span><br><span class="line"><span class="comment">	如果没有default，那么在运行的时候必须加名字，即需要输入gulp 声明的任务名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	gulp.task('default', [上面声明的任务的名字]);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最后直接执行命令进行压缩：gulp</span><br></pre></td></tr></table></figure>

<h4 id="汇总js的组件（模块）：gulp-concat"><a href="#汇总js的组件（模块）：gulp-concat" class="headerlink" title="汇总js的组件（模块）：gulp-concat"></a>汇总js的组件（模块）：gulp-concat</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 1.初始化项目</span></span><br><span class="line">npm init -y</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.安装相关的组件</span></span><br><span class="line">cnpm i gulp gulp-uglify gulp-concat -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.编写配置</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>); <span class="comment">// 引入gulp</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// 引入uglify</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// .src(['./src/js/*/*.js'])：这个匹配的是js下面的一层目录的.js文件，例如:/js/user/1.js</span></span><br><span class="line"><span class="comment">// .src(['./src/js/**/*.js'])：这个匹配的是js下面的任意目录的.js文件，(任意目录既包括根目录也包括任意级别的子目录)例如:/js/user/1.js</span></span><br><span class="line"><span class="comment">// 每一个插件都有自己的参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件连接 </span></span><br><span class="line"><span class="comment">// concat作用：文件连接，.pipe(concat(输出的文件名))</span></span><br><span class="line"><span class="comment">// gulp.dest作用：输出.pipe(gulp.dest('./build/js'))，因为concat已经指定过文件名了，所以只需指定文件的目录</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'bundle.min.js'</span>))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果需要每个打包成为单独的文件，则去除concat的使用即可</span></span><br></pre></td></tr></table></figure>

<h4 id="编译js中的ES6语法的组件（模块）：gulp-babel"><a href="#编译js中的ES6语法的组件（模块）：gulp-babel" class="headerlink" title="编译js中的ES6语法的组件（模块）：gulp-babel"></a>编译js中的ES6语法的组件（模块）：gulp-babel</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">安装：cnpm i gulp-babel @babel/core @babel/preset-env -D</span><br><span class="line"><span class="comment">// @babel是babel新版本的标志</span></span><br><span class="line"><span class="comment">// gulp-babel没有办法直接使用，需要其他库辅助来使用babel</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// gulp-babel：编译ES6语法，babel没有办法直接使用，需要其他的插件（@babel/core和@babel/preset-env）辅助使用，@babel/core是babel本身的核心库，@babel/preset-env是babel的环境预设。gulp-babel插件只是一个桥梁(是一个适配器)，让gulp能调用babel，但是，它不是babel本身，所以还需要安装@babel/core和@babel/preset-env</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译文件</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>); <span class="comment">// 引入gulp</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// 引入uglify</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat</span></span><br><span class="line"><span class="keyword">const</span> rename=<span class="built_in">require</span>(<span class="string">'gulp-rename'</span>); <span class="comment">// 引入rename</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// rename作用：重命名文件，具体参数可以参考npmjs网站，rename(&#123;suffix: '.min'&#125;)：添加后缀名.min</span></span><br><span class="line"><span class="comment">//babel：编译ES6，babel(&#123;presets: ['@babel/env']&#125;)：使用babel环境变量中的的预编译的配置</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'bundle.min.js'</span>))</span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">      presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="更改编译后的文件的名字的组件（模块）：gulp-rename"><a href="#更改编译后的文件的名字的组件（模块）：gulp-rename" class="headerlink" title="更改编译后的文件的名字的组件（模块）：gulp-rename"></a>更改编译后的文件的名字的组件（模块）：gulp-rename</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">安装：cnpm i gulp-rename -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件：</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>); <span class="comment">// 引入gulp</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// 引入uglify</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat</span></span><br><span class="line"><span class="keyword">const</span> rename=<span class="built_in">require</span>(<span class="string">'gulp-rename'</span>); <span class="comment">// 引入rename</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// rename作用：重命名文件，具体参数可以参考npmjs网站，rename(&#123;suffix: '.min'&#125;)：添加后缀名.min</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'bundle.min.js'</span>))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="解决编译、压缩之后的代码难调试模块：gulp-sourcemaps"><a href="#解决编译、压缩之后的代码难调试模块：gulp-sourcemaps" class="headerlink" title="解决编译、压缩之后的代码难调试模块：gulp-sourcemaps"></a>解决编译、压缩之后的代码难调试模块：gulp-sourcemaps</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// gulp-sourcemaps：解决编译、压缩之后的代码难调试（保留编译之前的源码的信息，如果不开sourcemap，则只是压缩，压缩之后就结束，出错代码不容易调试；如果打开sourcemap，它会将源码中的信息带过来，一旦出错了或者调试的时候，它可以通过sourcemap将原始的源代码恢复过来），并不是所有的浏览器都支持sourcemap，目前chrom支持sourcemap很好，火狐支持不大，IE不支持。</span></span><br><span class="line"></span><br><span class="line">安装: npm i gulp-sourcemaps -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// sourcemap的位置是放置在编译之前执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>); <span class="comment">// 引入gulp</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// 引入uglify</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat</span></span><br><span class="line"><span class="keyword">const</span> rename=<span class="built_in">require</span>(<span class="string">'gulp-rename'</span>); <span class="comment">// 引入rename</span></span><br><span class="line"><span class="keyword">const</span> babel=<span class="built_in">require</span>(<span class="string">'gulp-babel'</span>); <span class="comment">// 引入gulp-babel，它只是一个适配器</span></span><br><span class="line"><span class="keyword">const</span> sourcemaps=<span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/js/**/*.js'</span>])</span><br><span class="line">    <span class="comment">//.pipe(concat('bundle.min.js'))</span></span><br><span class="line">    .pipe(sourcemaps.init()) <span class="comment">// 对sourcemaps进行初始化(开始记录编译对代码的影响，方便告诉浏览器如何恢复)</span></span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">      presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(sourcemaps.write())<span class="comment">// 对sourcemaps进行写出</span></span><br><span class="line"></span><br><span class="line">    .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果不使用合并concat而是使用include的方式引入，sourcemap的css会定位不准确</span></span><br></pre></td></tr></table></figure>


<h4 id="压缩css模块：gulp-cssmin"><a href="#压缩css模块：gulp-cssmin" class="headerlink" title="压缩css模块：gulp-cssmin"></a>压缩css模块：gulp-cssmin</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">安装：npm i gulp-cssmin -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin=<span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>); <span class="comment">// 引入cssmin</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat：合并css</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// .src(['./src/css/**/*.css'])：读取文件</span></span><br><span class="line"><span class="comment">// .pipe(concat('style.min.css'))：合并文件</span></span><br><span class="line"><span class="comment">// .pipe(cssmin())：压缩文件</span></span><br><span class="line"><span class="comment">// .pipe(gulp.dest('./build/css/'))：输出</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'style'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/css/**/*.css'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'style.min.css'</span>))</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'style'</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="压缩图片：gulp-imagemin，还提供了渐进式的加载"><a href="#压缩图片：gulp-imagemin，还提供了渐进式的加载" class="headerlink" title="压缩图片：gulp-imagemin，还提供了渐进式的加载"></a>压缩图片：gulp-imagemin，还提供了渐进式的加载</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">安装：npm i gulp-imagemin -D</span><br><span class="line"></span><br><span class="line"><span class="comment">// gulp-imagemin提供了压缩图片的功能，还提供了渐进式的加载（图片加载比较慢时，一开始就能看见图片，但是比较模糊，渐渐就清晰了）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin=<span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>); <span class="comment">// 引入cssmin</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 引入concat：合并css</span></span><br><span class="line"><span class="keyword">const</span> imagemin=<span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// .src(['./src/css/**/*.css'])：读取文件</span></span><br><span class="line"><span class="comment">// .pipe(concat('style.min.css'))：合并文件</span></span><br><span class="line"><span class="comment">// .pipe(cssmin())：压缩文件</span></span><br><span class="line"><span class="comment">// .pipe(gulp.dest('./build/css/'))：输出</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'style'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/css/**/*.css'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'style.min.css'</span>))</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// gulp-imagemin只能压缩下面的三种文件png、jpg、gif</span></span><br><span class="line">gulp.task(<span class="string">'image'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/img/**/*.jpg'</span>, <span class="string">'./src/img/**/*.gif'</span>, <span class="string">'./src/img/**/*.png'</span>]) <span class="comment">// 读取文件，也可以写'./src/img/**/*.*'</span></span><br><span class="line">    .pipe(imagemin([</span><br><span class="line">      imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;), <span class="comment">// 优化.gif，隔行扫描(图片加载比较慢时，一开始就能看见图片，但是比较模糊，渐渐就清晰了)</span></span><br><span class="line">      imagemin.jpegtran(&#123;<span class="attr">propressive</span>: <span class="literal">true</span>&#125;), <span class="comment">// 优化.jpg，渐进扫描（和上面的一样）</span></span><br><span class="line">      imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;) <span class="comment">// 优化png(png是无损压缩)，</span></span><br><span class="line">    ]))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/img/'</span>)); <span class="comment">// 输出</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'image'</span>]);</span><br></pre></td></tr></table></figure>

<h4 id="自动监视文件的变化，自动重新编译：gulp-watch（这个只能编译实时更新，但是浏览器的实时更新不可以，需要另外一个组件）"><a href="#自动监视文件的变化，自动重新编译：gulp-watch（这个只能编译实时更新，但是浏览器的实时更新不可以，需要另外一个组件）" class="headerlink" title="自动监视文件的变化，自动重新编译：gulp.watch（这个只能编译实时更新，但是浏览器的实时更新不可以，需要另外一个组件）"></a>自动监视文件的变化，自动重新编译：gulp.watch（这个只能编译实时更新，但是浏览器的实时更新不可以，需要另外一个组件）</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">gulp.watch的功能也叫热更新</span><br><span class="line">gulp.watch([文件列表], [任务列表])</span><br><span class="line">gulp.watch([<span class="string">'./src/js/**/*.js'</span>], [<span class="string">'js'</span>])</span><br><span class="line"><span class="comment">// 任何一个文件变化了，它会自动执行任务列表中所有操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin=<span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>);</span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</span><br><span class="line"><span class="keyword">const</span> rename=<span class="built_in">require</span>(<span class="string">'gulp-rename'</span>);</span><br><span class="line"><span class="keyword">const</span> babel=<span class="built_in">require</span>(<span class="string">'gulp-babel'</span>);</span><br><span class="line"><span class="keyword">const</span> sourcemaps=<span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"><span class="keyword">const</span> imagemin=<span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用数组存储一系列类型的地址</span></span><br><span class="line"><span class="keyword">const</span> js_path=[<span class="string">'./src/js/**/*.js'</span>];</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(js_path)</span><br><span class="line">    <span class="comment">//.pipe(concat('bundle.min.js'))</span></span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">      presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line"></span><br><span class="line">    .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'style'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/css/**/*.css'</span>])</span><br><span class="line">    .pipe(concat(<span class="string">'style.min.css'</span>))</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'image'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/img/**/*.jpg'</span>, <span class="string">'./src/img/**/*.gif'</span>, <span class="string">'./src/img/**/*.png'</span>]) <span class="comment">// 读取文件，也可以写'./src/img/**/*.*'</span></span><br><span class="line">    .pipe(imagemin([</span><br><span class="line">      imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;), <span class="comment">// 优化.gif，隔行扫描(图片加载比较慢时，一开始就能看见图片，但是比较模糊，渐渐就清晰了)</span></span><br><span class="line">      imagemin.jpegtran(&#123;<span class="attr">propressive</span>: <span class="literal">true</span>&#125;), <span class="comment">// 优化.jpg，渐进扫描（和上面的一样）</span></span><br><span class="line">      imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;) <span class="comment">// 优化png(png是无损压缩)，</span></span><br><span class="line">    ]))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/img/'</span>)); <span class="comment">// 输出</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, ()=&gt;&#123;</span><br><span class="line">  gulp.watch(js_path, [<span class="string">'js'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>, <span class="string">'watch'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// watch如果操作特别复杂，会比较慢</span></span><br></pre></td></tr></table></figure>

<h4 id="代码重新编译之后，浏览器实时更新：livereload"><a href="#代码重新编译之后，浏览器实时更新：livereload" class="headerlink" title="代码重新编译之后，浏览器实时更新：livereload"></a>代码重新编译之后，浏览器实时更新：livereload</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">livereload是一个插件；</span><br><span class="line">livereload首先需要一个服务端，浏览器还需要一个livereload插件</span><br><span class="line"></span><br><span class="line">livereload的配置</span><br><span class="line"><span class="number">1.</span>首先需要服务器</span><br><span class="line">  npm i http-server -g</span><br><span class="line"><span class="comment">// gulp带的服务器http-server</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>插件(gulp)</span><br><span class="line">  npm i gulp-livereload -D</span><br><span class="line"><span class="comment">// 本地安装插件</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>插件(chrome)</span><br><span class="line">  crx往里拖</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>配置</span><br><span class="line">  编译之后，触发livereload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulpProject/<span class="number">1.</span>html：</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span> dir=<span class="string">"ltr"</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">`&lt;script src="build/js/bundle.min.js?t=<span class="subst">$&#123;<span class="built_in">Math</span>.random()&#125;</span>" charset="utf-8"&gt;&lt;/sc`</span>+<span class="string">`ript&gt;`</span>)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    aaabbbbdfasd</span><br><span class="line">  &lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> livereload=<span class="built_in">require</span>(<span class="string">'gulp-livereload'</span>); <span class="comment">// 功能：浏览器实时更新</span></span><br><span class="line"><span class="keyword">const</span> babel=<span class="built_in">require</span>(<span class="string">'gulp-babel'</span>); <span class="comment">// 编译ES6</span></span><br><span class="line"><span class="keyword">const</span> uglify=<span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>); <span class="comment">// js压缩</span></span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>); <span class="comment">// 文件连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> js_path=[<span class="string">'./src/js/**/*.js'</span>];</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(js_path) <span class="comment">// 匹配文件</span></span><br><span class="line">    .pipe(babel(&#123; <span class="comment">// 编译ES6</span></span><br><span class="line">      presets: [<span class="string">'@babel/env'</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(concat(<span class="string">'bundle.min.js'</span>)) <span class="comment">// 文件合并</span></span><br><span class="line">    .pipe(uglify()) <span class="comment">// 压缩js文件</span></span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/js'</span>)) <span class="comment">// 输出文件目录</span></span><br><span class="line">    .pipe(livereload()); <span class="comment">// 浏览器实时更新</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过watch调用名字为js的任务，通过js的任务来调用livereload</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="comment">// 开启livereload的服务（让服务器开始监听）</span></span><br><span class="line">  livereload.listen();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 重新编译JS（监听js_path文件的修改，如果它修改了，则执行任务名为js的任务）</span></span><br><span class="line">  gulp.watch(js_path, [<span class="string">'js'</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 监听html；标记文件修改</span></span><br><span class="line">  gulp.watch([</span><br><span class="line">    <span class="string">'./1.html'</span>,</span><br><span class="line">    ...js_path</span><br><span class="line">  ], file=&gt;&#123;</span><br><span class="line">    livereload.changed(file.path); <span class="comment">// changed：告诉livereload哪个文件更改了，则更新哪个文件</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'js'</span>, <span class="string">'watch'</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">开启http-server：输入命令：http-server</span><br></pre></td></tr></table></figure>
<p><img src="/2020/-05-/28-/gulp/1566290949373.png" alt="1566290949373"></p>
<h4 id="编译less：gulp-less"><a href="#编译less：gulp-less" class="headerlink" title="编译less：gulp-less"></a>编译less：gulp-less</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 配置</span></span><br><span class="line">gulpProject/gulpfile.js：</span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">const</span> less=<span class="built_in">require</span>(<span class="string">'gulp-less'</span>);</span><br><span class="line"><span class="keyword">const</span> sourcemaps=<span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"><span class="keyword">const</span> concat=<span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</span><br><span class="line"><span class="keyword">const</span> cssmin=<span class="built_in">require</span>(<span class="string">'gulp-cssmin'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'less'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/less/**/*.less'</span>])</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(concat(<span class="string">'main.less.min.css'</span>))</span><br><span class="line">    .pipe(less())</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'less'</span>]);</span><br></pre></td></tr></table></figure>

<h3 id="组合任务"><a href="#组合任务" class="headerlink" title="组合任务"></a>组合任务</h3><p>gulp.series：按照顺序执行<br>gulp.paralle：可以并行计算</p>
<p>series和paralle可以混合使用，这两个方法中的参数是task或者是组合的任务</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> gulp=<span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'less1'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/less/**/*.less'</span>])</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(concat(<span class="string">'main.less.min.css'</span>))</span><br><span class="line">    .pipe(less())</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">'less2'</span>, ()=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src([<span class="string">'./src/less/**/*.less'</span>])</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(concat(<span class="string">'main.less.min.css'</span>))</span><br><span class="line">    .pipe(less())</span><br><span class="line">    .pipe(cssmin())</span><br><span class="line">    .pipe(sourcemaps.write())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./build/css/'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'test'</span>, gulp.paralle(<span class="string">'less1'</span>, <span class="string">'less2'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'test'</span>, gulp.series(<span class="string">'less1'</span>, <span class="string">'less2'</span>, gulp.parallel(</span><br><span class="line">    cssTranspile,</span><br><span class="line">    gulp.series(jsTranspile, jsBundle)</span><br><span class="line">  )))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>gulp</category>
      </categories>
      <tags>
        <tag>gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>git和svn</title>
    <url>/2020/-05-/28-/git%E5%92%8Csvn/</url>
    <content><![CDATA[<h2 id="Git和SVN"><a href="#Git和SVN" class="headerlink" title="Git和SVN"></a>Git和SVN</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">版本控制</span><br><span class="line">共享协作、版本</span><br><span class="line"></span><br><span class="line">      svn              git</span><br><span class="line">存储  集中式           分布式</span><br><span class="line"></span><br><span class="line">github:帮助git同步数据，项目有一个集中的网站，让别人方便访问</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github								svn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git clone 源地址                       svn checkout</span><br><span class="line">git commit -a -m &quot;原因&quot;                svn commit&#x3D;commit+push+add</span><br><span class="line">git add 文件&#x2F;目录</span><br><span class="line"></span><br><span class="line">git push      推到服务器</span><br><span class="line">git pull      更新到本地                svn update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git update			下载git的最新版本</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Git和SVN</category>
      </categories>
      <tags>
        <tag>Git和SVN</tag>
      </tags>
  </entry>
  <entry>
    <title>node</title>
    <url>/2020/-05-/28-/node/</url>
    <content><![CDATA[<h2 id="Node简介"><a href="#Node简介" class="headerlink" title="Node简介"></a>Node简介</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Node.js：</span><br><span class="line">1.后台语言——操作数据、接口                 35%</span><br><span class="line">2.工具——WebPack、grunt、爬虫              65%</span><br></pre></td></tr></table></figure>

<h3 id="Node基础运行代码"><a href="#Node基础运行代码" class="headerlink" title="Node基础运行代码"></a>Node基础运行代码</h3><p>运行Node：<br>1.切换盘符              d:<br>2.切换目录              cd 目录名        //不能中文<br>3.使用Node运行JS文件    node xxx.js</p>
<h3 id="npm（包管理工具）"><a href="#npm（包管理工具）" class="headerlink" title="npm（包管理工具）"></a>npm（包管理工具）</h3><p>npm的好处<br>npm——Node Package Manager<br>1.自己下载——麻烦<br>2.依赖</p>
<p>npm自动下载、自动解决依赖</p>
<h4 id="npm使用"><a href="#npm使用" class="headerlink" title="npm使用"></a>npm使用</h4><p>npm下载内容是放在node_modules的文件夹中的</p>
<h5 id="普通下载"><a href="#普通下载" class="headerlink" title="普通下载"></a>普通下载</h5><p>在命令行中输入：npm install jquery<br>下载jquery最新版本的文件</p>
<h5 id="指定版本下载"><a href="#指定版本下载" class="headerlink" title="指定版本下载"></a>指定版本下载</h5><p>npm install jquery@1.*<br>下载jquery1.*最推荐的版本的文件</p>
<h5 id="指定工作范围"><a href="#指定工作范围" class="headerlink" title="指定工作范围"></a>指定工作范围</h5><p>npm install jquery -g  ：不加-g，只有当前目录有用，加了-g是整个电脑有用</p>
<h4 id="cnpm（自定义源）"><a href="#cnpm（自定义源）" class="headerlink" title="cnpm（自定义源）"></a>cnpm（自定义源）</h4><p>cnpm——自定义源（可以自定义源）<br>安装的地址：<a href="https://npm.taobao.org/" target="_blank" rel="noopener">https://npm.taobao.org/</a><br>安装好了之后使用和npm一样</p>
<p>cnpm i jquery@1.*  下载jquery1.*的稳定版本<br>cnpm i mysql    会自动下载mysql的依赖</p>
<h3 id="node升级"><a href="#node升级" class="headerlink" title="node升级"></a>node升级</h3><p>npm i -g n</p>
<p>n——升级node本身</p>
]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS基础</title>
    <url>/2020/-05-/28-/CSS%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="CSS2-1"><a href="#CSS2-1" class="headerlink" title="CSS2.1"></a>CSS2.1</h2><h3 id="CSS介绍"><a href="#CSS介绍" class="headerlink" title="CSS介绍"></a>CSS介绍</h3><p>CSS：层叠样式表（英文Cascading Style Sheets）：负责给页面做美化的<br>html专注于骨架，css专注于页面的样式</p>
<p>CSS简介<br>   层叠样式表 负责页面的表现，给页面标签增加样式 如字体颜色、宽高、背景色</p>
<h3 id="引入CSS的方式"><a href="#引入CSS的方式" class="headerlink" title="引入CSS的方式"></a>引入CSS的方式</h3><p>文件：02.27/1css-helloworld.html</p>
<h4 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h4><p>使用标签的style样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--行内式 通过标签的style属性来指定</span></span><br><span class="line"><span class="comment">    k:v;（键值对模式）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size: 20px;"</span>&gt;</span>大家都是年轻人嘛。相互伤害<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="内嵌式"><a href="#内嵌式" class="headerlink" title="内嵌式"></a>内嵌式</h4><p><strong>语法：</strong></p>
<ul>
<li>内嵌式 在head标签内部 放置下面的代码。实际上style标签的代码是可以放置在任意位置<style>
  div {
      color: orange;
  }
</style>

</li>
</ul>
<p>选择器（帮我们选择到操作的元素）{<br>    k:v;<br>    k:v;<br>}</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  style标签放在head中，style中写CSS代码 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123; // 标签名</span><br><span class="line">            color: orange;</span><br><span class="line">            text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">        选择器 &#123;</span><br><span class="line">            css样式</span><br><span class="line">        &#125;</span><br><span class="line">        */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>为了遇见更好的他，先自我变得优秀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="外链式"><a href="#外链式" class="headerlink" title="外链式"></a>外链式</h4><ul>
<li>外链式  把样式写到一个或多个css文件中，在网页中通过link引用需要的样式文件 </li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- // 先建一个文件  文件名.css 例如index.css</span></span><br><span class="line"><span class="comment">// 文件中写CSS语法，即上面style标签内部的东西，之前的style标签还是属于html的 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- index.css： --&gt;</span></span><br><span class="line">a &#123;</span><br><span class="line">    color: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        // 在html中将文件引入</span></span><br><span class="line"><span class="comment">        // href表示文件的地址</span></span><br><span class="line"><span class="comment">        // rel：relationsheep（关系）：表示从外部引入的文件和当前网页是什么关系，是样式表的关系（stylesheet）</span></span><br><span class="line"><span class="comment">        // 这样浏览器能更好的来理解这个文件，理解成引入的文件和当前文件是样式表的关系 </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"index.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- // 上面这样写相当于一个style标签将index.css中的文件放到style标签内 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><p><strong>使用</strong><br>— 标签选择器(标签名)<br>    div（标签名） {<br>        key: value;<br>        key: value;<br>    }<br><strong>特点</strong>：选中页面所有的div  </p>
<p><strong>使用标签选择器的场景</strong>：是让某一类标签有一个特殊的样式的时候可以使用标签选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.27/2selector.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- // 使用内嵌式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* // 标签选择器，即标签名 */</span></span></span><br><span class="line">        div &#123;</span><br><span class="line">            font-size: 28px;</span><br><span class="line">        &#125;</span><br><span class="line">        p &#123;</span><br><span class="line">            color: purple;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我爱我家<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>岁月蹉跎，请君珍惜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p><strong>使用</strong><br> — id选择器<br>    先给作用的元素设置id，然后通过#id属性值<br>    #id名称 {<br>        key: value;<br>        key: value;<br>    }<br><strong>特点：</strong>选中唯一的元素，因为id是唯一的。只选择一个元素，页面中不能有同名的id</p>
<p><strong>使用场景：</strong>id一般使用不是很多。如果只要对一个元素设置样式，会使用id选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.27/2selector.html</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /* </span><br><span class="line">        #号不能丢弃，加上id名 </span><br><span class="line">        一般页面的id是唯一的，所以通过id找的元素也是唯一的</span><br><span class="line">        // 每一个标签都有id属性</span><br><span class="line"></span><br><span class="line">        选择页面id值为div1的元素</span><br><span class="line">        */</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> &#123;</span></span><br><span class="line">            text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- // 每一个标签都有id属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>我爱中国<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我爱人民<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p><strong>语法</strong><br> — 类选择器<br>    .类名 {<br>        k:v;<br>        k:v;<br>        …<br>    }<br>    给需要设置该类样式的标签 添加class属性=”类名”</p>
<p><strong>特点：</strong>一般情况把某一类样式定义一个类 这样以后可以复用 。对元素设置多个class，只需要在class属性中写入多个class的名称，中间使用空格隔开<br>    // 标签的class属性只能写一次</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.27/2selector.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* 类选择器 */</span></span></span><br><span class="line">        </span><br><span class="line">        /*</span><br><span class="line">        类选择器需要加一个.</span><br><span class="line">        */</span><br><span class="line"><span class="css">        <span class="selector-class">.font60</span> &#123;</span></span><br><span class="line">            font-size: 60px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line"><span class="css">            <span class="comment">/* font-size: 60px; */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.blue</span> &#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line"><span class="css">            <span class="comment">/* font-size: 60px; */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line">            color: green;</span><br><span class="line"><span class="css">            <span class="comment">/* font-size: 60px; */</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"font60 green"</span>&gt;</span>我爱人民<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我爱我家<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"font60"</span>&gt;</span>只要功夫深,铁棒磨成针<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>岁月蹉跎，请君珍惜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"font60 red"</span>&gt;</span>V<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"font60 blue"</span>&gt;</span>u<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        /* 标签的class属性只能写一次 */</span></span><br><span class="line"><span class="comment">        /* 对元素设置多个class，只需要在class属性中写入多个class的名称，中间使用空格隔开  */</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"font60 green"</span>&gt;</span>e<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    /*一般在设计类的时候会原子化，这样以后方便复用*/ </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h4><p><strong>语法：</strong><br> — 通配符选择器<br>      * {<br>          key: value;<br>          key: value;<br>      }   </p>
<pre><code>* 代表所有元素</code></pre><p><strong>场景：</strong>设置页面中所有的元素为相同的样式的时候，使用通配符选择器</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.27/2selector.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        通配符选择器</span><br><span class="line">        */</span><br><span class="line">        * &#123;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我爱我家<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>岁月蹉跎，请君珍惜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>V<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h4><p><strong>语法：</strong><br>将任意选择器使用空格隔开</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.27/3selector.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 后代选择器*/</span></span></span><br><span class="line">        /* </span><br><span class="line">        选择div标签的子类标签名为p的标签</span><br><span class="line"></span><br><span class="line">        通配符选择器类似于，列出所有标签，所有的标签使用,分割</span><br><span class="line">         */</span><br><span class="line">        div p &#123;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul li p &#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是div内部的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我隐藏的比较深<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="儿子选择器"><a href="#儿子选择器" class="headerlink" title="儿子选择器"></a>儿子选择器</h4><p><strong>语法：</strong><br>选择器 &gt; 选择器 {<br>    key: value;<br>    key: value;<br>}</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* div的亲儿子p*/</span></span></span><br><span class="line">        div&gt;p &#123;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- /*上面样式对下面这个起作用*/ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是div内部的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- /*上面的样式对下面这个不起作用*/ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我隐藏的比较深<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础</title>
    <url>/2020/-05-/25-/HTML%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="HTML的骨架"><a href="#HTML的骨架" class="headerlink" title="HTML的骨架"></a>HTML的骨架</h2><a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">// 这句话叫DTD（Document Type Definition），全称文档类型声明。网页将来是给浏览器去执行的。设置文档的类型是html，这是一个网页类型，告诉浏览器不要将这个网页当作其他类型来看。告诉浏览器，网页的当前文档是html文档。这就是上面那句话的含义</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">// lang="en"：设置使用的语言是英语，body标签中可以写英文。body的标签中写中文也是可以的，也可以写其他语言</span><br><span class="line">// lang的语言设置是可以更改的，如果更改为其他的语言，则谷歌浏览器会询问是否需要翻译。</span><br><span class="line">// 因为body中写的是中文的，所以一般情况下会将lang设置为zh-CN</span><br><span class="line">// 不将en改成中文也可以，因为浏览器默认支持中文的，但是为了考虑以后的兼容性或系统的兼容性问题的话，需要将lang中的en改为zh-CN，zh是中，CN是chine，其实就是中文的意思</span><br><span class="line">// html是根标签，根标签之间是html代码</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		// meta标签是设置一些信息的</span><br><span class="line">    	// 设置字符集是UTF-8，因为网页中要写很多的语言，语言采用的编码是UTF-8，这个编码是世界上大部分国家的语言它都包含，所以一般情况下这个是不更改的</span><br><span class="line">    	// 一般情况下：如果做的是国际性的网站时使用UTF-8；如果做的网站时只有国内使用的话，可以将编码改成gb312这种编码格式</span><br><span class="line">        // 小写大写都认识</span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">		// 这个网页标题的设置</span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Do<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		// head的内容在网页中是看不到的，对网页做设置的</span><br><span class="line">		// body才是网页真正显示的内容</span><br><span class="line">		// 一般写代码时在head中设置好之后，在body中写各种标签</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="HTML4的标记"><a href="#HTML4的标记" class="headerlink" title="HTML4的标记"></a>HTML4的标记</h2><h3 id="HTML的标记的分类"><a href="#HTML的标记的分类" class="headerlink" title="HTML的标记的分类"></a>HTML的标记的分类</h3><p>1.双标签（大部分标签都是双标签）<br>&lt;html&gt;&lt;/html&gt;：这是最大的根标签，网页都是写在这里中的<br>双标签的格式是：&lt;标签名&gt;内容(文字内容或其他内容)&lt;/标签名&gt;<br>双标记一定要有结束</p>
<p>2.单标签<br>&lt;meta&gt;标签是单标记</p>
<h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><p>描述：在网页中表达标题的含义，比如说一级标题，二级标题；它给文字赋予几级标题的含义（语义化）</p>
<p>语义化：大部分标签都是有特定的含义的</p>
<p>用法：页面当中一级标题只允许出现一次，一般是将最最重要的定义为一级标题。例如腾讯的首页是公司的logo为一级标题，其他的是三级或二级标题</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/2h1-h6.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="划线标签"><a href="#划线标签" class="headerlink" title="划线标签"></a>划线标签</h3><p>描述：在网页中表示画一条线</p>
<p>用法：页面当中一级标题只允许出现一次，一般是将最最重要的定义为一级标题。例如腾讯的首页是公司的logo为一级标题，其他的是三级或二级标题</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/3hr.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">hr</span> /&gt;</span> // (一般标题和正文之间是有横线的) 这个是单标记，单标记的结束的是在&gt;后面加上/</span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        正文部分</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p>描述：在网页中表达段落的含义；它给文字赋予段落的含义（语义化）</p>
<p>用法：比如写一篇文章，这篇文章分三段</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/4p.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>第一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第二段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第三段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><p>描述：在网页中表达换行的含义</p>
<p>用法：比如写一篇文章，这篇文章分三段</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/4p.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>第一段<span class="tag">&lt;<span class="name">br</span> /&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="div标签"><a href="#div标签" class="headerlink" title="div标签"></a>div标签</h3><p>描述：在网页中表达盒子的含义（没有语义）</p>
<p>用法：任意地方可以使用，一般大的范围使用div来包裹，局部的小范围使用span来包裹</p>
<p>显示：每个div独占一行</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/5div&amp;span.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="span标签"><a href="#span标签" class="headerlink" title="span标签"></a>span标签</h3><p>描述：在网页中表示某一块小区域，span是占有一小部分</p>
<p>用法：任意地方可以使用，一般大的范围使用div来包裹，局部的小范围使用span来包裹</p>
<p>显示：每个span是占有一小部分</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/5div&amp;span.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>111<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>222<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="strong标签和b标签"><a href="#strong标签和b标签" class="headerlink" title="strong标签和b标签"></a>strong标签和b标签</h3><p>// b的作用是从外观上给文字加粗，还有一个strong标签和b相似，它也是加粗的。从外观上和b是一样的，但是strong它主要是强调的意思<br>// strong和b的区别是：他们的外观是一样的，都是加粗，但是strong是有语义的，b是没有语义的。b是从外观上加粗，strong是给内容强调，它通过外观强调。并且strong的权重也比较高</p>
<p>用法：任意地方可以使用</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/6strong.html</span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">		kklfndgjkdsf<span class="tag">&lt;<span class="name">b</span>&gt;</span>12<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span>12<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="em标签和i标签"><a href="#em标签和i标签" class="headerlink" title="em标签和i标签"></a>em标签和i标签</h3><p>// i和em表示让文字倾斜，也是和上面一样的。i是单纯的让文字倾斜。em是有语义的，i是没有语义的。有语义的是起强调的意思</p>
<p>用法：任意地方可以使用</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/6strong.html</span><br><span class="line">	kklfndgjkdsf<span class="tag">&lt;<span class="name">i</span>&gt;</span>12<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">em</span>&gt;</span>12<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="del标签和s标签"><a href="#del标签和s标签" class="headerlink" title="del标签和s标签"></a>del标签和s标签</h3><p>// s和del是表示删除线（一般是打折的时候会看到）。s是没有语义的，del是有语义的。在使用的时候如果是注重语义化则使用del。有语义的是起强调的意思</p>
<p>用法：任意地方可以使用</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/6strong.html</span><br><span class="line">	kklfndgjkdsf<span class="tag">&lt;<span class="name">s</span>&gt;</span>12<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">del</span>&gt;</span>12<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="ins标签和u标签"><a href="#ins标签和u标签" class="headerlink" title="ins标签和u标签"></a>ins标签和u标签</h3><p>// u和ins是表示下划线,u表示underline的意思。u和ins的外观是一样的，u是没有语义的，ins是有语义的。有语义的是起强调的意思</p>
<p>用法：任意地方可以使用</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件：02.25/6strong.html</span><br><span class="line">	kklfndgjkdsf<span class="tag">&lt;<span class="name">u</span>&gt;</span>12<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ins</span>&gt;</span>12<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="img标签"><a href="#img标签" class="headerlink" title="img标签"></a>img标签</h3><p>文件：02.25/7img.html</p>
<p>语法：<br>&lt;标签名 属性名=属性值 属性名=属性值&gt;<br>// 属性值一般是放置双引号中的（这是好的规范，有的是单引号有的没加，这是不好规范）。多个属性中间用空格隔开，这个空格的个数随便，一个即可，空格只是做一个分割的作用。src是指定图片的路径的<br>&lt;img src=”路径名” alt=” “/ &gt;</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">路径分两大类，一个是相对路径，一个是绝对路径，大部分情况下都是使用的是相对路径。</span><br><span class="line"></span><br><span class="line">什么是绝对路径：绝对路径就是带盘符的</span><br><span class="line"></span><br><span class="line">例如<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"c/test.1.png"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">绝对路径尽量少用，因为文件的位置可能更改，一旦文件的位置更改之后，则文件不可使用。</span><br><span class="line"></span><br><span class="line">相对路径：文件的相对路径不会错的，文件可以随意移动</span><br><span class="line"></span><br><span class="line">有的时候绝对路径也是使用的</span><br><span class="line"></span><br><span class="line">绝对路径：带盘符或者网址等，一般少用</span><br><span class="line">// 多用相对路径，相对路径一般不会出什么问题</span><br><span class="line"></span><br><span class="line">绝对路径：带盘符或者网址等</span><br><span class="line">相对路径 1 资源和当前文件在同一个目录 直接写文件名</span><br><span class="line">		2 资源所在目录和当前文件在同一个文件夹下 </span><br><span class="line">		此时  资源所在目录/资源</span><br><span class="line">		3 当前文件的所在目录与资源所在目录在同一目录下</span><br><span class="line">		此时  ../资源目录/资源</span><br></pre></td></tr></table></figure>


<p>案例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> // src可以写相对路径，相对路径是相对自己的文件，需要从网页中加载图片。如果html文件和img图片是在同级目录下面，则src是./文件名.扩展名，.表示当前目录，</span><br><span class="line"> // src中的文件名需要加上扩展名，文件的扩展名是什么就要写什么扩展名</span><br><span class="line">// 如果只有文件名称，默认会从当前目录查找。所以./加上不加上都一样</span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./tim.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> // 一个点是当前目录，两个点是上级目录</span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../tim.jpeg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="alt属性"><a href="#alt属性" class="headerlink" title="alt属性"></a>alt属性</h4><p>alt属性叫替换文本，如果图片加载不出来，就显示alt。它是给看网页的人的友好的提示<br>&lt;img src=”” alt=”图片加载不出来，显示我” /&gt;</p>
<h4 id="title属性"><a href="#title属性" class="headerlink" title="title属性"></a>title属性</h4><p>title属性：是叫悬停文本：鼠标放在图片上显示的文字<br>&lt;img src=”” alt=”图片加载不出来，显示我” title=”鼠标放在图片上，显示我”/&gt;<br>// 一般title是写这个图片是做什么的 </p>
<h4 id="width和height属性"><a href="#width和height属性" class="headerlink" title="width和height属性"></a>width和height属性</h4><p>如果图片比较大时可以设置图片的宽高的 ，使用width和height来设置，任何属性书写的顺序都是随意的，宽高时像素为单位的，只需要写数字<br>&lt;img src=”” alt=”” title=”” width=”100” height=”100”&gt;</p>
<h3 id="a标签"><a href="#a标签" class="headerlink" title="a标签"></a>a标签</h3><p>文件：02.25/8a.html<br>a标签：就是超链接标签</p>
<h4 id="href属性"><a href="#href属性" class="headerlink" title="href属性"></a>href属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// a标签是双标记，href的值是跳转的网址，这是基本的超链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// href可以写网址也可以写资源，资源可以写相对路径。即href可以写相对路径和绝对路径</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"7img.html"</span>&gt;</span>资源文件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="title属性-1"><a href="#title属性-1" class="headerlink" title="title属性"></a>title属性</h4><p>title属性:鼠标放上去显示文字</p>
<h4 id="target属性"><a href="#target属性" class="headerlink" title="target属性"></a>target属性</h4><p>target属性：设置目标打开方式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// _blank表示将使用新窗口打开链接即跳转的地址使用新窗口打开</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"www.baidu.com"</span> <span class="attr">title</span>=<span class="string">"baidu"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">有的时候，点一个链接，不想让它跳转，可以使用空链接，将href设置为#</span><br><span class="line">// 空链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// 图片链接：点击图片进行跳转：</span><br><span class="line">图片链接就是将图片标签在外面包裹一个a</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片地址"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//href中可以写地址，也可以写资源文件，路径可以写相对的也可以写绝对的。这个和img标签中的src是类似的</span><br></pre></td></tr></table></figure>

<h3 id="base标签"><a href="#base标签" class="headerlink" title="base标签"></a>base标签</h3><p>文件：02.25/8a.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// 超链接很多时候是在新窗口打开，如果是在新窗口打开，那么每个超链接都要设置target属性的，这是比较麻烦的，那么可以在head中配置一个整个页面超链接的共有的属性，<span class="tag">&lt;<span class="name">base</span>&gt;</span>,翻译过来就是基本的基础的。</span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>// 设置页面中所有的超链接都在新窗口打开</span><br><span class="line"></span><br><span class="line">// 不写超链接的target属性，那么target属性是从base中继承的</span><br><span class="line">// 设置target的属性的就按照设置的target属性</span><br></pre></td></tr></table></figure>

<h3 id="pre标签"><a href="#pre标签" class="headerlink" title="pre标签"></a>pre标签</h3><p>文件：02.25/9pre.html</p>
<p>pre标签是一个预格式化标签<br>// 如果html中有多个空格，或者换行，则在浏览器中只将它作为一个空格在网页中展示<br>// 如果使用pre标签将内容嵌套，则告诉浏览器以页面中本身的内容样式显示，不会将多个空格或者换行在网页中变成一个空格</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">   锄禾日当午 </span><br><span class="line">   汗滴             禾下土 </span><br><span class="line">   谁知盘中餐 </span><br><span class="line">   粒粒皆辛苦<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">   <span class="symbol">&amp;lt;</span>h1<span class="symbol">&amp;gt;</span><span class="symbol">&amp;lt;</span>/h1<span class="symbol">&amp;gt;</span></span><br><span class="line">   <span class="symbol">&amp;copy;</span></span><br><span class="line">   <span class="symbol">&amp;reg;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>汗滴<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>禾下土<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   3<span class="symbol">&amp;times;</span>5=15</span><br></pre></td></tr></table></figure>

<h3 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h3><p>文件：02.25/9pre.html</p>
<p>所有的标签是不会显示在网页中的，标签只是给内容赋予一定的含义或者给内容修饰，或者给内容加一些语义化的。<br>如果想在网页中显示一些标签怎么办。例如要将&lt;h1&gt;&lt;/h1&gt;显示在页面中怎么办<br>这个时候就需要使用特殊字符了。如果直接在文件中写&lt;h1&gt;&lt;/h1&gt;浏览器会将它当作标签来解析，当成标题来处理，所以可以将尖括号换成特殊的字符。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&amp;lt;</span> //表示<span class="tag">&lt;</span></span><br><span class="line"><span class="tag">&amp;<span class="attr">gt</span>; //表示&gt;</span></span><br><span class="line"><span class="symbol">&amp;lt;</span>h1<span class="symbol">&amp;gt;</span>&amp;lt/h1<span class="symbol">&amp;gt;</span> // 这个时候浏览器就不会将这句话当成标签解析了</span><br><span class="line"></span><br><span class="line"><span class="symbol">&amp;copy;</span>：这个是版权</span><br><span class="line"><span class="symbol">&amp;reg;</span>：这个是商标</span><br><span class="line"><span class="symbol">&amp;nbsp;</span>：这是表示一个空格</span><br><span class="line"></span><br><span class="line"><span class="symbol">&amp;times;</span>：表示乘法符号</span><br><span class="line">3<span class="symbol">&amp;times;</span>5=15 // 展示</span><br></pre></td></tr></table></figure>

<h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>文件：02.25/10alink.html<br>文件：02.25/11alink2.html</p>
<p>锚点：当页面内容比较多时，利用锚点可以快速定位到某个位置</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 下面的a是锚点，锚点名字方便跳转 --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 下面设置标记 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"third"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>第三集圣诞节是基督教世界最大的节日。</span><br><span class="line">   <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 超链接：#是空链接，会默认刷新页面；因为页面是从上向下加载的，所以回到顶部显示 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>返回顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 最简单的返回顶部，还有其他的方式返回顶部 --&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 快速定位到某个位置 a标签的href和锚点的名字要相同 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#third"</span>&gt;</span>跳到第三集<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 锚点可以支持跨页面 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 不写target是在当前页面打开 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"10alink.html#forth"</span>&gt;</span>跳转到10alink页面的第四集<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>文件：02.25/14ul.html</p>
<p>在html中的列表分为三种：无序列表，有序列表，自定义列表</p>
<h4 id="ul标签-无序列表"><a href="#ul标签-无序列表" class="headerlink" title="ul标签-无序列表"></a>ul标签-无序列表</h4><p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--unordered list --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ul中一定要有li，内容一定要在li中写 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 使用场景：当有很多项，没有先后顺序，而且都是反映一个主题时就可以使用无序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>1.广东<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- li =》  list item --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>2.江苏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>3.浙江<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="ol标签-有序列表"><a href="#ol标签-有序列表" class="headerlink" title="ol标签-有序列表"></a>ol标签-有序列表</h4><p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--ol 有序列表--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>广东<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>江苏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>浙江<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 实际工作中ul用的最多，一般有序列表也会使用ul --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 项目中ol、ul都可以，尽量选有语义化的。有语义便于搜索引擎优化 --&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h4><p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自定义列表 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- difinition list --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 自定义标题 t：title --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dt</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 自定义描述 d：discription --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- dd是描述dt的， dl是分割；一个dt可以有多个dd；一个dl可以有多个dt和dd --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>货到付款<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>在线支付<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>分期付款<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>公司转账<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dt</span>&gt;</span>配送方式<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>上门提取<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dd</span>&gt;</span>211限时达<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="table标签"><a href="#table标签" class="headerlink" title="table标签"></a>table标签</h3><p>文件：02.25/15table.html</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表格 1 布局 2 展示数据--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 表格是默认没有边框和边界线的，使用一些属性来添加 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- border=1：设置1像素边框，border是给整个表格甚至是每个单元格都加上边框，默认单元格和单元格之间是有个间隙的。 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- cellspacing=0：cell表示单元细胞的意思，单元格之间默认是有间隙，设置单元格之间的间隙设置为0 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- align=center：让整个表格水平居中；调整表格的对齐方式，默认居左对齐，可以调整居右right和居中center对齐 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- width、height：设置表格的宽高，单位是像素 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- cellpadding=5：调整文字和单元格之间的间隙为5像素（调整文字在单元格之间的偏移量，右边距可以使用css来写） --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">cellpadding</span>=<span class="string">"25"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--定义行 table row--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>3.3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="caption标签"><a href="#caption标签" class="headerlink" title="caption标签"></a>caption标签</h4><p>文件：02.25/16table_demo2.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表格 1 布局 2 展示数据--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">cellpadding</span>=<span class="string">"25"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 定义表格标题  -- 自动在表格内部居中 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>员工信息表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--定义行--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--table head  th设置表头--&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 用法和td一样只不过样式不一样 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘伟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>张娜<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h4><p>文件：02.25/16table_demo2.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">cellpadding</span>=<span class="string">"25"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>个人简历<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>阿龙<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 合并单元格  --横跨两行  --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>照片<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>身高175<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>汉族<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>已婚<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span>&gt;</span>自我评价<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 合并单元格 -- 横跨3列 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="表格头和表格体和表格尾"><a href="#表格头和表格体和表格尾" class="headerlink" title="表格头和表格体和表格尾"></a>表格头和表格体和表格尾</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表格结构分为3块：表格头，表格体，表格尾 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 没有指定具体结构时，浏览器会将表格所有的内容都当成表格体 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 表格 1 布局 2 展示数据--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">cellpadding</span>=<span class="string">"25"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">caption</span>&gt;</span>员工信息表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 表格头部 table head：一般是标题 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--th设置表头--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 表格体 table body --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>刘伟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>张娜<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>23<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 表格尾部   一般是汇总信息 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>公司名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>TMD<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 分清结构便于浏览器解析 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="form表单标签"><a href="#form表单标签" class="headerlink" title="form表单标签"></a>form表单标签</h3><p>文件：02.25/17form.html<br>表单是使用form标签</p>
<p>表单：登录或注册的页面，是用于收集用户信息的</p>
<h4 id="form属性"><a href="#form属性" class="headerlink" title="form属性"></a>form属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- submit是有提交功能的提交到那里去，可以通过form的属性 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">       &lt;form action="url" method="get"&gt;&lt;/form&gt;</span></span><br><span class="line"><span class="comment">       action的值指定表单提交到哪里去，一般是后台服务器的地址</span></span><br><span class="line"><span class="comment">       method：表示表单提交方式，常见是get、post，不写值默认是get</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">       action属性指定表单提交给什么程序处理</span></span><br><span class="line"><span class="comment">       method属性指定表单提交方式 一般是get/post</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="input–text"><a href="#input–text" class="headerlink" title="input–text"></a>input–text</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- input单标签  类型：text文本框 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 属性：value属性是给下面表单元素设置默认值的 --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- h5的进阶阶段提示用户输入使用placeholder属性 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="input–password"><a href="#input–password" class="headerlink" title="input–password"></a>input–password</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- input单标签  类型：password密码框 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 属性：value属性是给下面表单元素设置默认值的 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="input–radio"><a href="#input–radio" class="headerlink" title="input–radio"></a>input–radio</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- input单标签  类型：radio单选按钮，单选按钮需要加name，name值一样的情况下是表示只能选一个；checked表示默认选中 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果不设置相同的name值，或者不设置name的话会导致两个按钮都可以一起被选中 --&gt;</span></span><br><span class="line">性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> /&gt;</span>女</span><br></pre></td></tr></table></figure>

<h4 id="input–checkbox"><a href="#input–checkbox" class="headerlink" title="input–checkbox"></a>input–checkbox</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- input单标签  类型：checkbox复选框 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- name是需要的如果需要使用表单提交到后台就要设置name的值 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- checked表示默认选中 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- checked可以简写；如果值和名字一样可以简写，例如checked="checked" --&gt;</span></span><br><span class="line">爱好</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span>&gt;</span>运动</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span> <span class="attr">checked</span>&gt;</span>编程</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span>&gt;</span>旅游</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobbies"</span>&gt;</span>交友</span><br></pre></td></tr></table></figure>

<h4 id="input–file"><a href="#input–file" class="headerlink" title="input–file"></a>input–file</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- input单标签  类型：file文件选择框 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 属性：value属性是给下面表单元素设置默认值的 --&gt;</span></span><br><span class="line">头像</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="input–hidden"><a href="#input–hidden" class="headerlink" title="input–hidden"></a>input–hidden</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- type还有一个类型是hide，隐藏表单元素，（通过隐藏表单元素携带数据到后台）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="textarea标签"><a href="#textarea标签" class="headerlink" title="textarea标签"></a>textarea标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">	textarea &#123;</span><br><span class="line"><span class="css">           <span class="comment">/* 设置文本域不可拖拽 */</span></span></span><br><span class="line">           resize: none;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- textarea：表示文本域 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 写表单的时候每一个都要name，如果使用form表单提交数据到后台时，后台是通过name的值来获取数据的；如果不设置，后台拿不到这条数据 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- rows表示行，cols表示列 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- textarea的默认值是写在标签中间的 --&gt;</span></span><br><span class="line">个人留言</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"user_content"</span> <span class="attr">cols</span>=<span class="string">"20"</span> <span class="attr">rows</span>=<span class="string">"8"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="select标签"><a href="#select标签" class="headerlink" title="select标签"></a>select标签</h4><p>文件：02.27/17form.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表单中的下拉列表叫select --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- value的值就是选中的值，表单提交，提交的值是value的值 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- selected表示当前选项默认选中。selected=selected因为属性和值相等可以简写为selected --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>--请选择省份--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"jingsu"</span> <span class="attr">selected</span>&gt;</span>江苏省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"hunan"</span>&gt;</span>湖南省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"guangdong"</span>&gt;</span>广东省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上面的代码默认只能选一个选项，如果想要多选的话，可以加上属性 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- multiple属性表示下拉选择框可以多选。属性名和属性值一样的情况下，可以只写一个单词即可，有兼容问题，但是一般情况下都是兼容的 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- size属性设置默认展示几项 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">multiple</span> <span class="attr">size</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>--请选择学习课程--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"en"</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"xinli"</span>&gt;</span>心理学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"caiwu"</span>&gt;</span>财务管理<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 按钮：value是按钮的文字 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- type="button"：普通按钮 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 作用：取决于js的代码给表单添加了什么事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"普通按钮"</span> <span class="attr">id</span>=<span class="string">"btn"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- type="reset"表示重置按钮，value默认有值，但是也是可以更改value的值的 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 作用：将之前的值恢复到默认值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  type="submit"：提交按钮；提交按钮也有默认的value的值，value值可以被更改 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 作用：将表单选择的值提交到服务器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果想要将表单填写的数据提交到服务器，那么表单元素是需要有name属性的；name是唯一标识表单元素的，他还有一个作用是表单提交需要name --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--图片提交按钮--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- src是图片的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"images/btn.png"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- type是image和type是submit本质上是没有区别的，只是外观不一样，都表示提交，都有提交的默认事件 --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="lable标签"><a href="#lable标签" class="headerlink" title="lable标签"></a>lable标签</h3><p>文件：02.25/18label标签.html</p>
<p>lable标签严格意义来说，它不属于表单的标签，但是一般和表单的元素配合使用，作用将文字和表单元素进行关联</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 点文字也可以选中文本域 --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- lable实现了上面的功能，将文字和文本域关联起来 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pwd"</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> <span class="attr">id</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- lable上面有两种用法，for的值是需要关联的表单元素的id值 --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 一般情况上面两种都可以，但是有的低版本浏览器只识别下面的这种 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>



















<h2 id="乱码原因"><a href="#乱码原因" class="headerlink" title="乱码原因"></a>乱码原因</h2><p>// 乱码：文件默认保存方式和打开文件的方式不一样，会导致乱码</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>ios中input设置只读</title>
    <url>/2020/-05-/15-/ios%E4%B8%ADinput%E8%AE%BE%E7%BD%AE%E5%8F%AA%E8%AF%BB/</url>
    <content><![CDATA[<h2 id="ios中input设置readonly属性无效"><a href="#ios中input设置readonly属性无效" class="headerlink" title="ios中input设置readonly属性无效"></a>ios中input设置readonly属性无效</h2><p>问题：解决readonly属性在ios中不生效的问题：readonly在IOS中不生效的问题，会出现光标一直显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 解决readonly属性在ios中不生效的问题</span><br><span class="line">$(&#39;input[readonly]&#39;).on(&#39;focus&#39;, function() &#123;</span><br><span class="line">    $(this).trigger(&#39;blur&#39;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>ios</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>IE图片</title>
    <url>/2020/-05-/15-/IE%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h2 id="IE图片"><a href="#IE图片" class="headerlink" title="IE图片"></a>IE图片</h2><h3 id="解决IE中图片不显示的问题"><a href="#解决IE中图片不显示的问题" class="headerlink" title="解决IE中图片不显示的问题"></a>解决IE中图片不显示的问题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IE9不能自动识别图片是什么格式的，所以需要后台传输图片时告诉IE浏览器图片是什么格式的</span><br><span class="line">其他浏览器可以自动判断图片的类型从而进行渲染</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>IE</category>
      </categories>
      <tags>
        <tag>IE</tag>
      </tags>
  </entry>
  <entry>
    <title>vue的分环境打包</title>
    <url>/2020/-05-/15-/vue%E7%9A%84%E5%88%86%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<p>vue的分环境打包</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/-03-/17-/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ES6AndBabel</title>
    <url>/2020/-03-/05-/ES6AndBabel/</url>
    <content><![CDATA[<p><img src="/2020/-03-/05-/ES6AndBabel/1557213201454.png" alt="你想输入的替代文字"><br><img src="/2020/-03-/05-/ES6AndBabel/1557213201454.png" alt="示例"></p>
]]></content>
  </entry>
  <entry>
    <title>hexo</title>
    <url>/2020/-03-/04-/hexo/</url>
    <content><![CDATA[<h2 id="hexo部署运行"><a href="#hexo部署运行" class="headerlink" title="hexo部署运行"></a>hexo部署运行</h2><a id="more"></a>
<h2 id="hexo运行的前提是：安装了node和hexo"><a href="#hexo运行的前提是：安装了node和hexo" class="headerlink" title="hexo运行的前提是：安装了node和hexo"></a>hexo运行的前提是：安装了node和hexo</h2><h3 id="node安装"><a href="#node安装" class="headerlink" title="node安装"></a>node安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo -g &#x2F;&#x2F; 全局安装</span><br></pre></td></tr></table></figure>
<h2 id="hexo在本地运行"><a href="#hexo在本地运行" class="headerlink" title="hexo在本地运行"></a>hexo在本地运行</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s &#x2F;&#x2F; 本地代码运行</span><br></pre></td></tr></table></figure>

<h2 id="hexo创建文件"><a href="#hexo创建文件" class="headerlink" title="hexo创建文件"></a>hexo创建文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 文件名</span><br></pre></td></tr></table></figure>

<h2 id="hexo部署到git项目"><a href="#hexo部署到git项目" class="headerlink" title="hexo部署到git项目"></a>hexo部署到git项目</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean &#x2F;&#x2F;清除了你之前生成的东西，也可以不加。</span><br><span class="line">hexo generate &#x2F;&#x2F;顾名思义，生成静态文章，可以用 hexo g缩写</span><br><span class="line">hexo deploy &#x2F;&#x2F;部署文章，可以用hexo d缩写</span><br><span class="line"></span><br><span class="line">之后可以在http:&#x2F;&#x2F;yourname.github.io查看</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>a</title>
    <url>/2020/-01-/05-/a/</url>
    <content><![CDATA[<p>在这里随便写点什么</p>
<a id="more"></a>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
